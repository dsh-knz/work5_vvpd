import math

# Константа для количества итераций
iters = 10


def cos_series(x):
    """
    Вычисляет косинус числа x с использованием разложения в ряд Тейлора.

    Короткое описание:
    Реализация разложения cos(x) = 1 - x^2/2! + x^4/4! - ... для заданного числа итераций.

    Описание:
    Функция использует цикл для вычисления суммы ряда Тейлора для cos(x).
    Количество итераций задается константой ITERATIONS.

    Аргументы:
    x (float): Число, для которого нужно вычислить cos(x).

    Возвращаемое значение:
    float: Приблизительное значение cos(x).

    Исключения:
    ValueError: Если x не является числом.

    Примеры использования:
    #>>> cos_series(0)
    1.0
    #>>> cos_series(math.pi / 3)
    0.5000000000
    """
    if not isinstance(x, (int, float)):
        raise ValueError("x должен быть числом")

    result = 0
    for n in range(iters):
        term = ((-1) ** n) * (x ** (2 * n)) / math.factorial(2 * n)
        result += term
    return result


def ln_series(x):
    """
    Вычисляет натуральный логарифм (ln(1-x)) с использованием разложения в ряд Тейлора.

    Короткое описание:
    Реализация разложения ln(1-x) = -x - x^2/2 - x^3/3 - ... для заданного числа итераций.

    Описание:
    Функция использует цикл для вычисления суммы ряда Тейлора для ln(1-x).
    Количество итераций задается константой ITERATIONS.
    Граничное условие: -1 < x <= 1.

    Аргументы:
    x (float): Число, для которого нужно вычислить ln(1-x).

    Возвращаемое значение:
    float: Приблизительное значение ln(1-x).

    Исключения:
    ValueError: Если x выходит за границы (-1, 1].

    Примеры использования:
    #>>> ln_series(0.5)
    -0.6931471806
    #>>> ln_series(-0.5)
    -0.4054651081
    """
    if not isinstance(x, (int, float)):
        raise ValueError("x должен быть числом")
    if x <= -1 or x > 1:
        raise ValueError("x должен быть в пределах (-1, 1]")

    result = 0
    for n in range(1, iters + 1):
        term = (-1) ** (n + 1) * (x ** n) / n
        result += term
    return result


def calc_power_series(x, m):
    """
    Вычисляет (1 - x)^m с использованием разложения в ряд Тейлора.

    Короткое описание:
    Реализация разложения (1 - x)^m = 1 - mx + m(m-1)x^2/2! - ... для заданного числа итераций.

    Описание:
    Функция вычисляет значение выражения (1 - x)^m с использованием ряда Тейлора.
    Граничное условие: -1 < x < 1. Количество итераций задается константой iters.

    Аргументы:
    x (float): Значение, для которого нужно вычислить (1 - x)^m.
    m (float): Степень, в которую возводится (1 - x).

    Возвращаемое значение:
    float: Приблизительное значение (1 - x)^m.

    Исключения:
    ValueError: Если x не в пределах (-1, 1).

    Примеры использования:
    #>>> calc_power_series(0.5, 2)
    0.5625
    #>>> calc_power_series(-0.5, 3)
    1.875
    """
    if x <= -1 or x >= 1:
        raise ValueError("x должен быть в пределах (-1, 1)")

    result = 1.0
    current_term = 1.0

    for i in range(1, iters + 1):
        current_term *= (-x * m) / i
        result += current_term
        m -= 1

    return result



def main():
    """
    Главное меню программы.

    Описание:
    Пользователь выбирает функцию (cos(x) или ln(1-x)), вводит значение x,
    и получает результат на экран.
    """
    while True:
        print("\nМеню:"
              "\n1. Вычислить cos(x)"
              "\n2. Вычислить ln(1-x)"
              "\n3. Вычислить (1-x)^m"
              "\n4. Выйти")
        choice = input("\nВведите ваш выбор: ")

        if choice == "1":
            try:
                x = float(input("Введите значение x: "))
                print(f"cos({x}) ≈ {cos_series(x)}")
            except ValueError as e:
                print(f"Ошибка: {e}")
        elif choice == "2":
            try:
                x = float(input("Введите значение x (в пределах -1 < x <= 1): "))
                print(f"ln(1-{x}) ≈ {ln_series(x)}")
            except ValueError as e:
                print(f"Ошибка: {e}")
        elif choice == '3':
            try:
                x = float(input("Введите x (-1 < x < 1): "))
                m = float(input("Введите m: "))
                print(f"Результат: (1 - {x})^{m} ≈ {calc_power_series(x, m)}")
            except ValueError as e:
                print(f"Ошибка: {e}")
        elif choice == "4":
            print("Выход из программы.")
            break
        else:
            print("Некорректный выбор. Попробуйте снова.")

if __name__ == "__main__":
    main()
